
@book{juola_six_2017,
	address = {Lincoln},
	title = {Six {Septembers}: mathematics for the humanist},
	isbn = {978-1-60962-111-7},
	shorttitle = {Six {Septembers}},
	abstract = {Scholars of all stripes are turning their attention to materials that represent enormous opportunities for the future of humanistic inquiry. The purpose of this book is to impart the concepts that underlie the mathematics they are likely to encounter and to unfold the notation in a way that removes that particular barrier completely. This book is a primer for developing the skills to enable humanist scholars to address complicated technical material with confidence. This book, to put it plainly, is concerned with the things that the author of a technical article knows, but isn't saying. Like any field, mathematics operates under a regime of shared assumptions, and it is our purpose to elucidate some of those assumptions for the newcomer. The individual subjects we tackle are (in order): logic and proof, discrete mathematics, abstract algebra, probability and statistics, calculus, and differential equations.},
	language = {English},
	publisher = {Zea E-Books},
	author = {Juola, Patrick and Ramsay, Stephen},
	year = {2017},
	note = {OCLC: 1015817392},
}

@book{matthes_python_2016,
	address = {San Francisco},
	title = {Python crash course: a hands-on, project-based introduction to programming},
	isbn = {978-1-59327-603-4},
	shorttitle = {Python crash course},
	abstract = {"A project-based introduction to programming in Python, with exercises. Covers general programming concepts, Python fundamentals, and problem solving. Includes three projects - how to create a simple video game, use data visualization techniques to make graphs and charts, and build an interactive web application"--},
	publisher = {No Starch Press},
	author = {Matthes, Eric},
	year = {2016},
	keywords = {Python (Computer program language)},
}

@book{montfort_exploratory_2021,
	address = {Cambridge, Massachusetts},
	edition = {Second edition},
	title = {Exploratory programming for the arts and humanities},
	isbn = {978-0-262-04460-8},
	abstract = {"Exploratory Programming for the Arts and Humanities offers a course on programming without prerequisites. It covers both the essentials of computing and the main areas in which computing applies to the arts and humanities"--},
	publisher = {The MIT Press},
	author = {Montfort, Nick},
	year = {2021},
	keywords = {Computer programming, Digital humanities},
}

@article{leetaru_why_2019,
	title = {Why {Computer} {Science} {Needs} {The} {Humanities}},
	url = {https://www.forbes.com/sites/kalevleetaru/2019/08/06/why-computer-science-needs-the-humanities/},
	abstract = {Computer science reduces the world to numbers. The humanities teach us how much those numbers fail to capture. Perhaps if computer scientists looked up from their screens of code they might understand why the humanities are ever more important in a world increasingly defined by code.},
	language = {en},
	urldate = {2022-09-29},
	journal = {Forbes},
	author = {Leetaru, Kalev},
	month = aug,
	year = {2019},
	note = {Section: AI \& Big Data},
}

@book{vanderplas_whirlwind_2016,
	address = {Sebastopol, CA},
	edition = {First edition},
	title = {A whirlwind tour of {Python}},
	isbn = {978-1-4919-6464-4},
	abstract = {To tap into the power of Python's open data science stack--including NumPy, Pandas, Matplotlib, Scikit-learn, and other tools--you first need to understand the syntax, semantics, and patterns of the Python language. This report provides a brief yet comprehensive introduction to Python for engineers, researchers, and data scientists who are already familiar with another programming language. Author Jake VanderPlas, an interdisciplinary research director at the University of Washington, explains Python's essential syntax and semantics, built-in data types and structures, function definitions, control flow statements, and more, using Python 3 syntax. You'll explore: Python syntax basics and running Python code Basic semantics of Python variables, objects, and operators Built-in simple types and data structures Control flow statements for executing code blocks conditionally Methods for creating and using reusable functions Iterators, list comprehensions, and generators String manipulation and regular expressions Python's standard library and third-party modules Python's core data science tools Recommended resources to help you learn more},
	language = {eng},
	publisher = {O'Reilly Media},
	author = {Vanderplas, Jacob T.},
	year = {2016},
	note = {OCLC: 1023864062},
}